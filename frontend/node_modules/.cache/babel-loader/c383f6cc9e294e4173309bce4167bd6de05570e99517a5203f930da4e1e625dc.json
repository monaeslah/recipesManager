{"ast":null,"code":"var _jsxFileName = \"/Users/arash/Desktop/my-app/src/components/login/toggleBtn.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputField = () => {\n  _s();\n  const [isRightSelected, setIsRightSelected] = useState(false);\n  const handleLeftButtonClick = () => {\n    setIsRightSelected(false);\n  };\n  const handleRightButtonClick = () => {\n    setIsRightSelected(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-field-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `input-field-container ${isRightSelected ? \"right-selected\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"input-button left-button\",\n        onClick: handleLeftButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"input-button right-button\",\n        onClick: handleRightButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-content\",\n      children: isRightSelected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This is the content when the right button is selected.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Right content input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This is the content when the left button is selected.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Left content input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(InputField, \"drkOkz8GDz3zI74jJQXiY9pfYJM=\");\n_c = InputField;\nexport default InputField;\nvar _c;\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","InputField","_s","isRightSelected","setIsRightSelected","handleLeftButtonClick","handleRightButtonClick","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","_c","$RefreshReg$"],"sources":["/Users/arash/Desktop/my-app/src/components/login/toggleBtn.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst InputField = () => {\n  const [isRightSelected, setIsRightSelected] = useState(false);\n\n  const handleLeftButtonClick = () => {\n    setIsRightSelected(false);\n  };\n\n  const handleRightButtonClick = () => {\n    setIsRightSelected(true);\n  };\n\n  return (\n    <div className=\"input-field-wrapper\">\n      <div\n        className={`input-field-container ${\n          isRightSelected ? \"right-selected\" : \"\"\n        }`}\n      >\n        <button\n          className=\"input-button left-button\"\n          onClick={handleLeftButtonClick}\n        ></button>\n        <input type=\"text\" className=\"input-field\" />\n        <button\n          className=\"input-button right-button\"\n          onClick={handleRightButtonClick}\n        ></button>\n      </div>\n      <div className=\"form-content\">\n        {isRightSelected ? (\n          <div className=\"right-form\">\n            {/* Right button's form content */}\n            <p>This is the content when the right button is selected.</p>\n            <input type=\"text\" placeholder=\"Right content input\" />\n          </div>\n        ) : (\n          <div className=\"left-form\">\n            {/* Left button's form content */}\n            <p>This is the content when the left button is selected.</p>\n            <input type=\"text\" placeholder=\"Left content input\" />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default InputField;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMO,qBAAqB,GAAGA,CAAA,KAAM;IAClCD,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,MAAME,sBAAsB,GAAGA,CAAA,KAAM;IACnCF,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,oBACEJ,OAAA;IAAKO,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCR,OAAA;MACEO,SAAS,EAAE,yBACTJ,eAAe,GAAG,gBAAgB,GAAG,EAAE,EACtC;MAAAK,QAAA,gBAEHR,OAAA;QACEO,SAAS,EAAC,0BAA0B;QACpCE,OAAO,EAAEJ;MAAsB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACVb,OAAA;QAAOc,IAAI,EAAC,MAAM;QAACP,SAAS,EAAC;MAAa;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7Cb,OAAA;QACEO,SAAS,EAAC,2BAA2B;QACrCE,OAAO,EAAEH;MAAuB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eACNb,OAAA;MAAKO,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BL,eAAe,gBACdH,OAAA;QAAKO,SAAS,EAAC,YAAY;QAAAC,QAAA,gBAEzBR,OAAA;UAAAQ,QAAA,EAAG;QAAsD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC7Db,OAAA;UAAOc,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC;QAAqB;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD,CAAC,gBAENb,OAAA;QAAKO,SAAS,EAAC,WAAW;QAAAC,QAAA,gBAExBR,OAAA;UAAAQ,QAAA,EAAG;QAAqD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC5Db,OAAA;UAAOc,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC;QAAoB;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACX,EAAA,CA7CID,UAAU;AAAAe,EAAA,GAAVf,UAAU;AA+ChB,eAAeA,UAAU;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}