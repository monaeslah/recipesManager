{"ast":null,"code":"var _jsxFileName = \"/Users/arash/Desktop/my-app/src/components/login/index.tsx\",\n  _s = $RefreshSig$();\n// src/components/Login.tsx\nimport React, { useState } from \"react\";\nimport Login from \"./login\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Index = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Basic validation example\n    if (!email || !password) {\n      setErrorMessage(\"Email and password are required\");\n      return;\n    }\n    // Handle login logic here\n    console.log(\"Login success:\", {\n      email,\n      password\n    });\n    setErrorMessage(\"\");\n  };\n  const emailOnChange = e => {\n    setError(\"\");\n    setEmail(e.target.value);\n  };\n  const handleKeyDown = event => {\n    if (event.key === \"Enter\") {}\n  };\n  const [isChecked, setIsChecked] = useState(false);\n  const handleToggle = () => {\n    setIsChecked(!isChecked);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle-container\",\n      onClick: handleToggle,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"toggle\",\n        className: \"toggle-checkbox\",\n        checked: isChecked,\n        onChange: handleToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"toggle\",\n        className: \"toggle-label\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `toggle-ball ${isChecked ? \"checked\" : \"\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Index, \"5FFVDpfxQlQ4zd7XsKKjMOsznRA=\");\n_c = Index;\nexport default Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["React","useState","Login","jsxDEV","_jsxDEV","Fragment","_Fragment","Index","_s","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","setErrorMessage","console","log","emailOnChange","setError","target","value","handleKeyDown","event","key","isChecked","setIsChecked","handleToggle","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","type","id","checked","onChange","htmlFor","_c","$RefreshReg$"],"sources":["/Users/arash/Desktop/my-app/src/components/login/index.tsx"],"sourcesContent":["// src/components/Login.tsx\nimport React, { useState } from \"react\";\n\nimport Login from \"./login\";\nconst Index: React.FC = () => {\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    // Basic validation example\n    if (!email || !password) {\n      setErrorMessage(\"Email and password are required\");\n      return;\n    }\n    // Handle login logic here\n    console.log(\"Login success:\", { email, password });\n    setErrorMessage(\"\");\n  };\n  const emailOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setError(\"\");\n    setEmail(e.target.value);\n  };\n\n  const handleKeyDown = (event: { key: string }) => {\n    if (event.key === \"Enter\") {\n    }\n  };\n\n  const [isChecked, setIsChecked] = useState(false);\n\n  const handleToggle = () => {\n    setIsChecked(!isChecked);\n  };\n  return (\n    <>\n      <Login />\n      <div className=\"toggle-container\" onClick={handleToggle}>\n        <input\n          type=\"checkbox\"\n          id=\"toggle\"\n          className=\"toggle-checkbox\"\n          checked={isChecked}\n          onChange={handleToggle}\n        />\n        <label htmlFor=\"toggle\" className=\"toggle-label\">\n          <span className={`toggle-ball ${isChecked ? \"checked\" : \"\"}`}></span>\n        </label>\n      </div>\n    </>\n  );\n};\n\nexport default Index;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAC5B,MAAMC,KAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAS,EAAE,CAAC;EAEpD,MAAMY,YAAY,GAAIC,CAAkB,IAAK;IAC3CA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA,IAAI,CAACN,KAAK,IAAI,CAACE,QAAQ,EAAE;MACvBK,eAAe,CAAC,iCAAiC,CAAC;MAClD;IACF;IACA;IACAC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE;MAAET,KAAK;MAAEE;IAAS,CAAC,CAAC;IAClDK,eAAe,CAAC,EAAE,CAAC;EACrB,CAAC;EACD,MAAMG,aAAa,GAAIL,CAAsC,IAAK;IAChEM,QAAQ,CAAC,EAAE,CAAC;IACZV,QAAQ,CAACI,CAAC,CAACO,MAAM,CAACC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMC,aAAa,GAAIC,KAAsB,IAAK;IAChD,IAAIA,KAAK,CAACC,GAAG,KAAK,OAAO,EAAE,CAC3B;EACF,CAAC;EAED,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAM2B,YAAY,GAAGA,CAAA,KAAM;IACzBD,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EACD,oBACEtB,OAAA,CAAAE,SAAA;IAAAuB,QAAA,gBACEzB,OAAA,CAACF,KAAK;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACT7B,OAAA;MAAK8B,SAAS,EAAC,kBAAkB;MAACC,OAAO,EAAEP,YAAa;MAAAC,QAAA,gBACtDzB,OAAA;QACEgC,IAAI,EAAC,UAAU;QACfC,EAAE,EAAC,QAAQ;QACXH,SAAS,EAAC,iBAAiB;QAC3BI,OAAO,EAAEZ,SAAU;QACnBa,QAAQ,EAAEX;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACF7B,OAAA;QAAOoC,OAAO,EAAC,QAAQ;QAACN,SAAS,EAAC,cAAc;QAAAL,QAAA,eAC9CzB,OAAA;UAAM8B,SAAS,EAAE,eAAeR,SAAS,GAAG,SAAS,GAAG,EAAE;QAAG;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAACzB,EAAA,CA/CID,KAAe;AAAAkC,EAAA,GAAflC,KAAe;AAiDrB,eAAeA,KAAK;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}